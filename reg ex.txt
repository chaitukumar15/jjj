reg expressions -->

to create strong search pattern 

syntax -- > /pattern/

/patterns/

methods ->

search 

test 

match 

replace 



test method 

reg.test(string);

..........................................................
pipe operator ->|
 (or)
/dog|cat/
...........................................................
i flag and g flag 

..........................................................

period ->

dot
wild card char 

t...b / t.b /
...........................................................
range of char ->

[a-z]
[A-Z]
[0-9]

...........................................................
predefined group char ->
[aiu]
[aeiou]

...........................................................
[a-z1-5]  and 

..........................................................
negation -> 

^[]--> start 

-> [^0-8]--> not 

$ end 
...........................................................

one or more --> +

zero or more time *

...........................................................

gready vs lazy 


<h1>hi </h1>

/<.*>/ gready 

/<.*?>/ ;lazy

...........................................................
\w
\d
\s
\D
\W
\S
..........................................................
quantity specifiers ->

{4,6} 

{4}

...........................................................
+ve look ahead  
VAR a="qu"
/q(?=u)/  true 

-ve look ahead
VAR a="qu"
/q(?!u)/  false

...........................................................
capture groups ->

/(\w)\1/ 

...........................................................

